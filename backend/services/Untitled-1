  console.log("eventid", eventid)
    // console.log("body", body)
    this.subquery2(eventid, userid)
      .then((events_users) => { 
        if (!events_users) {
          return err
        }
      return this.knex.transaction((trx) => {
        return trx("events")
          .where("events.id", eventid)
          .update({
            name: body.event_name,
            description: body.event_description,
            datetime: body.event_datetime,
            // photo: body.event_photo,
            address: body.event_address,
            private: body.event_private,
            deposit: body.event_deposit
          })
          .then(eventsid => {
            // console.log("eventsid",eventsid)
            // return this.knex("items")
            // .join("todo", "todo.id", "items.todo_id")
            // .where("todo.id", body.todo_id)

            console.log("itemsArray", body.itemsArray)

            return Promise.map(body.itemsArray, (item: any) => {

              // for (let i in body.itemsArray) {
              return trx("items")
                .where("id", item.items_id)
                .update({
                  name: item.items_name,
                  quantity: item.quantity,
                  users_id: item.users_id,
                    isactive: item.isactive,
                    completed: item.completed
                })
              // console.log(body.itemsArray[i].items_id)
              // }
            })
            }).then((data) => {
            // console.log("nothing", nothing)
            this.subquery1(eventid, userid)//returns users_id
              .then((eventuser) => { 
              if (eventuser == undefined) {
              return trx("events_users") 
                    .insert({
                  users_id: userid,
                  events_id: eventid,
                  creator: false,
              isactive: true
                })
            } else {
            return data
            }
          //     return eventid

          //   })
          //     .catch((err: any) => {
          //       console.log("post err", err);
          //       res.status(500).json({ status: "failed" })
          //     })
})
})
})
    })